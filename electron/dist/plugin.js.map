{"version":3,"file":"plugin.js","sources":["../build/src/definitions.js","../build/electron/src/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=definitions.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Filesystem = void 0;\r\nconst fs_1 = require(\"fs\");\r\nconst os_1 = require(\"os\");\r\nconst path_1 = require(\"path\");\r\nconst process = require(\"process\");\r\nconst Buffer = require(\"buffer\");\r\nconst definitions_1 = require(\"../../src/definitions\");\r\nclass Filesystem {\r\n    constructor() {\r\n        this.con = require('electron').remote.getGlobal('console');\r\n        this.fileLocations = null;\r\n        this.fileLocations = { DRIVE_ROOT: '', DOCUMENTS: '' };\r\n        if (os_1.platform() == \"win32\") {\r\n            this.fileLocations[\"DRIVE_ROOT\"] = process.cwd().split(path_1.sep)[0];\r\n        }\r\n        else {\r\n            this.fileLocations[\"DRIVE_ROOT\"] = '/';\r\n        }\r\n        this.fileLocations[definitions_1.Directory.Documents] = path_1.join(os_1.homedir(), `Documents`) + path_1.sep;\r\n        this.fileLocations[definitions_1.Directory.Cache] = path_1.join(os_1.homedir(), `AppData`, `Local`, `Temp`) + path_1.sep;\r\n        this.fileLocations[definitions_1.Directory.Data] = process.cwd() + path_1.sep;\r\n    }\r\n    isBase64String(str) {\r\n        try {\r\n            return btoa(atob(str)) == str;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    readFile(options) {\r\n        return new Promise((resolve, reject) => {\r\n            if (Object.keys(this.fileLocations).indexOf(options.directory) === -1)\r\n                reject(`${options.directory} is currently not supported in the Electron implementation.`);\r\n            let lookupPath = this.fileLocations[options.directory] + options.path;\r\n            // @ts-ignore\r\n            fs_1.readFile(lookupPath, options.encoding || 'binary', (err, data) => {\r\n                if (err) {\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                // @ts-ignore\r\n                resolve({ data: options.encoding ? data : Buffer.from(data, 'binary').toString('base64') });\r\n            });\r\n        });\r\n    }\r\n    writeFile(options) {\r\n        return new Promise((resolve, reject) => {\r\n            if (Object.keys(this.fileLocations).indexOf(options.directory) === -1)\r\n                reject(`${options.directory} is currently not supported in the Electron implementation.`);\r\n            let lookupPath = this.fileLocations[options.directory] + options.path;\r\n            let data = options.data;\r\n            if (!options.encoding && !(data instanceof Blob)) {\r\n                data = data.indexOf(',') >= 0 ? data.split(',')[1] : data;\r\n                if (!this.isBase64String(data))\r\n                    throw Error('The supplied data is not valid base64 content.');\r\n            }\r\n            const dstDirectory = path_1.dirname(lookupPath);\r\n            fs_1.stat(dstDirectory, (err) => {\r\n                if (err) {\r\n                    const doRecursive = options.recursive;\r\n                    if (doRecursive) {\r\n                        fs_1.mkdirSync(dstDirectory, { recursive: doRecursive });\r\n                    }\r\n                }\r\n                // @ts-ignore\r\n                fs_1.writeFile(lookupPath, data, options.encoding || 'binary', (err) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve({ uri: lookupPath });\r\n                });\r\n            });\r\n        });\r\n    }\r\n    appendFile(options) {\r\n        return new Promise((resolve, reject) => {\r\n            if (Object.keys(this.fileLocations).indexOf(options.directory) === -1)\r\n                reject(`${options.directory} is currently not supported in the Electron implementation.`);\r\n            let lookupPath = this.fileLocations[options.directory] + options.path;\r\n            let data = options.data;\r\n            if (!options.encoding) {\r\n                const base64Data = options.data.indexOf(',') >= 0 ? options.data.split(',')[1] : options.data;\r\n                // @ts-ignore\r\n                data = Buffer.from(base64Data, 'base64');\r\n            }\r\n            // @ts-ignore\r\n            fs_1.appendFile(lookupPath, data, options.encoding || 'binary', (err) => {\r\n                if (err) {\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    deleteFile(options) {\r\n        return new Promise((resolve, reject) => {\r\n            if (Object.keys(this.fileLocations).indexOf(options.directory) === -1)\r\n                reject(`${options.directory} directory is currently not supported in the Electron implementation.`);\r\n            let lookupPath = this.fileLocations[options.directory] + options.path;\r\n            fs_1.unlink(lookupPath, (err) => {\r\n                if (err) {\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    mkdir(options) {\r\n        return new Promise((resolve, reject) => {\r\n            if (Object.keys(this.fileLocations).indexOf(options.directory) === -1)\r\n                reject(`${options.directory} is currently not supported in the Electron implementation.`);\r\n            let lookupPath = this.fileLocations[options.directory] + options.path;\r\n            const doRecursive = options.recursive;\r\n            fs_1.mkdir(lookupPath, { recursive: doRecursive }, (err) => {\r\n                if (err) {\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    rmdir(options) {\r\n        let { path, directory, recursive } = options;\r\n        if (Object.keys(this.fileLocations).indexOf(directory) === -1)\r\n            return Promise.reject(`${directory} is currently not supported in the Electron implementation.`);\r\n        return this.stat({ path, directory })\r\n            .then((stat) => {\r\n            if (stat.type === 'directory') {\r\n                return this.readdir({ path, directory })\r\n                    .then((readDirResult) => {\r\n                    if (readDirResult.files.length !== 0 && !recursive) {\r\n                        return Promise.reject(`${path} is not empty.`);\r\n                    }\r\n                    if (!readDirResult.files.length) {\r\n                        return new Promise((resolve, reject) => {\r\n                            let lookupPath = this.fileLocations[directory] + path;\r\n                            fs_1.rmdir(lookupPath, (err) => {\r\n                                if (err) {\r\n                                    reject(err);\r\n                                    return;\r\n                                }\r\n                                resolve();\r\n                            });\r\n                        });\r\n                    }\r\n                    else {\r\n                        return Promise.all(readDirResult.files.map((f) => {\r\n                            return this.rmdir({ path: path_1.join(path, f.name), directory, recursive });\r\n                        }))\r\n                            .then(() => {\r\n                            return this.rmdir({ path, directory, recursive });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return this.deleteFile({ path, directory });\r\n            }\r\n        });\r\n    }\r\n    readdir(options) {\r\n        this.con.log(\"readdir\", options);\r\n        return new Promise((resolve, reject) => {\r\n            if (Object.keys(this.fileLocations).indexOf(options.directory) === -1)\r\n                reject(`${options.directory} is currently not supported in the Electron implementation.`);\r\n            let lookupPath = this.fileLocations[options.directory] + options.path;\r\n            this.con.log(\"reading directory in electron\", lookupPath);\r\n            fs_1.readdir(lookupPath, (err, files) => {\r\n                if (err) {\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                let fileInfos = files.map((file) => {\r\n                    let stats = fs_1.statSync(lookupPath + path_1.sep + file);\r\n                    let fileInfo = {\r\n                        name: file,\r\n                        type: 'file',\r\n                        size: stats.size,\r\n                        ctime: stats.ctimeMs,\r\n                        mtime: stats.mtimeMs,\r\n                        uri: lookupPath + path_1.sep + file\r\n                    };\r\n                    return fileInfo;\r\n                });\r\n                this.con.log(\"fileInfos\", fileInfos);\r\n                resolve({ files: fileInfos });\r\n            });\r\n        });\r\n    }\r\n    getUri(options) {\r\n        return new Promise((resolve, reject) => {\r\n            if (Object.keys(this.fileLocations).indexOf(options.directory) === -1)\r\n                reject(`${options.directory} directory is currently not supported in the Electron implementation.`);\r\n            let lookupPath = this.fileLocations[options.directory] + options.path;\r\n            resolve({ uri: lookupPath });\r\n        });\r\n    }\r\n    ;\r\n    stat(options) {\r\n        return new Promise((resolve, reject) => {\r\n            if (Object.keys(this.fileLocations).indexOf(options.directory) === -1)\r\n                reject(`${options.directory} is currently not supported in the Electron implementation.`);\r\n            let lookupPath = this.fileLocations[options.directory] + options.path;\r\n            fs_1.stat(lookupPath, (err, stats) => {\r\n                if (err) {\r\n                    reject(err);\r\n                    return;\r\n                }\r\n                if (!stats.isDirectory() && !stats.isFile()) {\r\n                    reject('The path is neither a file nor a directory.');\r\n                    return;\r\n                }\r\n                resolve({\r\n                    type: (stats.isDirectory() ? 'directory' : 'file'),\r\n                    size: stats.size,\r\n                    ctime: stats.ctimeMs,\r\n                    mtime: stats.mtimeMs,\r\n                    uri: lookupPath\r\n                });\r\n            });\r\n        });\r\n    }\r\n    _copy(options, doRename = false) {\r\n        const copyRecursively = (src, dst) => {\r\n            return new Promise((resolve, reject) => {\r\n                fs_1.stat(src, (err, stats) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    if (stats.isDirectory()) {\r\n                        fs_1.mkdir(dst, (err) => {\r\n                            if (err) {\r\n                                reject(err);\r\n                                return;\r\n                            }\r\n                            const files = fs_1.readdirSync(src);\r\n                            Promise.all(files.map((file) => copyRecursively(src + path_1.sep + file, dst + path_1.sep + file)))\r\n                                .then(() => resolve())\r\n                                .catch(reject);\r\n                            return;\r\n                        });\r\n                        return;\r\n                    }\r\n                    const dstParent = path_1.dirname(dst).split(path_1.sep).pop();\r\n                    fs_1.stat(dstParent, (err) => {\r\n                        if (err) {\r\n                            fs_1.mkdirSync(dstParent);\r\n                        }\r\n                        fs_1.copyFile(src, dst, (err) => {\r\n                            if (err) {\r\n                                reject(err);\r\n                                return;\r\n                            }\r\n                            resolve();\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            if (!options.from || !options.to) {\r\n                reject('Both to and from must be supplied');\r\n                return;\r\n            }\r\n            if (!options.toDirectory) {\r\n                options.toDirectory = options.directory;\r\n            }\r\n            if (Object.keys(this.fileLocations).indexOf(options.directory) === -1) {\r\n                reject(`${options.directory} is currently not supported in the Electron implementation.`);\r\n                return;\r\n            }\r\n            if (Object.keys(this.fileLocations).indexOf(options.toDirectory) === -1) {\r\n                reject(`${options.toDirectory} is currently not supported in the Electron implementation.`);\r\n                return;\r\n            }\r\n            const fromPath = this.fileLocations[options.directory] + options.from;\r\n            const toPath = this.fileLocations[options.toDirectory] + options.to;\r\n            if (doRename) {\r\n                fs_1.rename(fromPath, toPath, (err) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve();\r\n                });\r\n            }\r\n            else {\r\n                copyRecursively(fromPath, toPath)\r\n                    .then(() => resolve())\r\n                    .catch(reject);\r\n            }\r\n        });\r\n    }\r\n    async copy(options) {\r\n        await this._copy(options, false);\r\n        return Promise.resolve({ uri: options.to });\r\n    }\r\n    rename(options) {\r\n        return this._copy(options, true);\r\n    }\r\n    async checkPermissions() {\r\n        return null;\r\n    }\r\n    async requestPermissions() {\r\n        return null;\r\n    }\r\n    addListener(_eventName, _listenerFunc) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    downloadFile(_options) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    removeAllListeners() {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}\r\nexports.Filesystem = Filesystem;\r\n//# sourceMappingURL=index.js.map"],"names":["require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","Filesystem_1"],"mappings":"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"}